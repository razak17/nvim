local P = rvim.palette
local util = require('user.utils.highlights')
local darker_bg = util.alter_color(P.bg, -20)
rvim.palette.darker_bg = darker_bg

return {
  Normal = { fg = P.fg, bg = P.darker_bg },
  NormalNC = { fg = P.fg, bg = P.none },
  Terminal = { fg = P.fg, bg = P.bg },
  SignColumn = { fg = P.fg, bg = P.darker_bg },
  FoldColumn = { fg = P.fg_alt, bg = P.black },
  VertSplit = { fg = P.darker_blue, bg = P.darker_bg },
  MsgArea = { bg = P.darker_bg },
  MsgSeparator = { fg = P.base6, bg = P.darker_bg },
  Folded = { fg = P.grey, bg = P.dark_alt },
  EndOfBuffer = { fg = P.bg, bg = P.none },
  IncSearch = { fg = P.bg, bg = P.teal },
  Search = { fg = P.bg, bg = P.teal },
  Conceal = { fg = P.grey, bg = P.none },
  Cursor = { fg = P.none, bg = P.none, reverse = true },
  vCursor = { fg = P.none, bg = P.none, reverse = true },
  iCursor = { fg = P.none, bg = P.none, reverse = true },
  lCursor = { fg = P.none, bg = P.none, reverse = true },
  ColorColumn = { fg = P.none, bg = P.dark },
  CursorIM = { fg = P.none, bg = P.none, reverse = true },
  CursorColumn = { fg = P.none, bg = P.dark_alt },
  CursorLine = { fg = P.none, bg = P.dark },
  LineNr = { fg = P.base5, bg = P.none },
  qfLineNr = { fg = P.cyan },
  qfFileName = { fg = P.yellowgreen },
  -- FIX: highlight not getting set
  CursorLineNr = { fg = P.pink, bold = true },
  netrwDir = { fg = P.pink },
  DiffAdd = { fg = P.black, bg = P.dark_green },
  DiffChange = { fg = P.black, bg = P.yellow },
  DiffDelete = { fg = P.black, bg = P.red },
  DiffText = { fg = P.black, bg = P.fg },
  Directory = { fg = P.blue, bg = P.none },
  ErrorMsg = { fg = P.pale_red, bg = P.none, bold = true },
  WarningMsg = { fg = P.dark_orange, bg = P.none, bold = true },
  ModeMsg = { fg = P.fg, bg = P.none, bold = true },

  MatchParen = { fg = P.red, bg = P.none },
  NonText = { fg = P.base5 },
  Whitespace = { fg = P.base4 },
  SpecialKey = { fg = P.bg },
  Pmenu = { fg = P.fg, bg = P.bg },
  PmenuSel = { fg = P.base0, bg = P.blue },
  PmenuSelBold = { fg = P.base0, bg = P.blue },
  PmenuSbar = { fg = P.none, bg = P.dark_grey },
  PmenuThumb = { bg = P.darker_blue },
  WildMenu = { fg = P.fg, bg = P.green },
  Question = { fg = P.yellow },
  NormalFloat = { fg = P.pale_blue, bg = P.darker_bg },
  TabLineFill = { bg = P.bg },
  TabLineSel = { bg = P.dark_alt },
  StatusLine = { fg = P.base8, bg = P.base2 },
  StatusLineNC = { fg = P.grey, bg = P.base2 },
  SpellBad = { fg = P.error_red, bg = P.none, undercurl = true },
  SpellCap = { fg = P.blue, bg = P.none, undercurl = true },
  SpellLocal = { fg = P.cyan, bg = P.none, undercurl = true },
  SpellRare = { fg = P.violet, bg = P.none, undercurl = true },
  Visual = { fg = P.black, bg = P.bracket },
  VisualNOS = { fg = P.black, bg = P.bracket },
  QuickFixLine = { fg = P.black },
  Debug = { fg = P.orange },
  debugBreakpoint = { fg = P.bg, bg = P.red },

  Boolean = { fg = P.orange },
  Number = { fg = P.brown },
  Float = { fg = P.brown },
  PreProc = { fg = P.violet },
  PreCondit = { fg = P.violet },
  Include = { fg = P.violet },
  Define = { fg = P.violet },
  Conditional = { fg = P.pink },
  Repeat = { fg = P.pink },
  Keyword = { fg = P.pink },
  Class = { fg = P.blue },
  Variable = { fg = P.green },
  Property = { fg = P.green },
  Field = { fg = P.blue },
  Method = { fg = P.green },
  Typedef = { fg = P.red },
  Exception = { fg = P.red },
  Statement = { fg = P.red },
  Error = { fg = P.red },
  StorageClass = { fg = P.orange },
  Tag = { fg = P.orange },
  Label = { fg = P.orange },
  Structure = { fg = P.orange },
  Operator = { fg = P.redwine },
  Title = { fg = P.orange, bold = true },
  Special = { fg = P.yellow },
  SpecialChar = { fg = P.yellow },
  Type = { fg = P.teal },
  Function = { fg = P.yellow },
  String = { fg = P.light_green },
  Character = { fg = P.green },
  Constant = { fg = P.cyan },
  Macro = { fg = P.cyan },
  Identifier = { fg = P.blue },

  Comment = { fg = P.comment },
  SpecialComment = { fg = P.comment },
  Todo = { fg = P.orange, italic = true },
  Delimiter = { fg = P.fg },
  Ignore = { fg = P.grey },
  Underlined = { fg = P.none, underline = true },

  JsonFold = { fg = P.comment },

  TSFunction = { fg = P.blue },
  TSComment = { fg = P.comment },
  TSMethod = { fg = P.cyan },
  TSProperty = { fg = P.yellow },
  TSType = { fg = P.teal },
  TSVariable = { fg = P.red_alt },
  TSPunctBracket = { fg = P.bracket },
  TSConstructor = { fg = P.teal },
  TSFuncBuiltin = { fg = P.cyan },
  TSField = { fg = P.dirty },
}
