return {
  servers = {
    "clangd",
    "cssls",
    "cmake",
    "dockerls",
    "elixirls",
    "emmet_ls",
    "gopls",
    "graphql",
    "html",
    "jsonls",
    "sumneko_lua",
    "pyright",
    "rust_analyzer",
    "bashls",
    "vimls",
    "yamlls",
    "tsserver",
    "eslint",
  },
  completion = {
    item_kind = {
      "   (Text) ",
      "   (Method)",
      " ƒ  (Function)",
      "   (Constructor)",
      " ﴲ  (Field)",
      "   (Variable)",
      "   (Class)",
      " ﰮ  (Interface)",
      "   (Module)",
      " 襁 (Property)",
      "   (Unit)",
      "   (Value)",
      " 了 (Enum)",
      "   (Keyword)",
      "   (Snippet)",
      "   (Color)",
      "   (File)",
      "   (Reference)",
      "   (Folder)",
      "   (EnumMember)",
      "   (Constant)",
      " ﳤ  (Struct)",
      " 鬒 (Event)",
      "   (Operator)",
      "   (TypeParameter)",
    },
  },
  diagnostics = {
    signs = {
      active = true,
      values = {
        { name = "DiagnosticSignError", text = "" },
        { name = "DiagnosticSignWarn", text = "" },
        { name = "DiagnosticSignInfo", text = "" },
        { name = "DiagnosticSignHint", text = "" },
      },
    },
    virtual_text = {
      prefix = "",
      spacing = 2,
    },
    underline = true,
    border = "single",
    update_in_insert = false,
    severity_sort = true,
    float = {
      focusable = false,
      style = "minimal",
      border = "single",
      source = "always",
      header = "",
      prefix = "",
      format = function(d)
        local t = vim.deepcopy(d)
        local code = d.code or (d.user_data and d.user_data.lsp.code)
        if code then
          t.message = string.format("%s [%s]", t.message, code):gsub("1. ", "")
        end
        return t.message
      end,
    },
  },
  null_ls = {
    setup = {
      -- root_dir = require("lspconfig").util.root_pattern("Makefile", ".git", "node_modules"),
    },
    config = {},
  },
  automatic_servers_installation = true,
  on_attach_callback = nil,
  on_init_callback = nil,
  document_highlight = true,
  code_lens_refresh = true,
  hover_diagnostics = false,
  lint_on_save = false,
  popup_border = "single",
  float = {
    focusable = false,
    style = "minimal",
    border = "rounded",
  },
  override = {
    "angularls",
    "ansiblels",
    "ccls",
    "csharp_ls",
    "cssmodules_ls",
    "denols",
    "ember",
    "emmet_ls",
    "eslint",
    "eslintls",
    "golangci_lint_ls",
    "grammarly",
    "graphql",
    "jedi_language_server",
    "ltex",
    "phpactor",
    "psalm",
    "pylsp",
    "quick_lint_js",
    "remark_ls",
    "rome",
    "solang",
    "solidity_ls",
    "sorbet",
    "sourcekit",
    "spectral",
    "sqlls",
    "sqls",
    "stylelint_lsp",
    "tailwindcss",
    "tflint",
    "volar",
    "zk",
  },
}
