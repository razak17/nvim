{
  "if(main)": {
    "prefix": "__main__",
    "body": ["if __name__ == \"__main__\":", "    ${1:pass}"],
    "description": "Code snippet for a `if __name__ == \"__main__\": ...` block"
  },
  "elif": {
    "prefix": "elif",
    "body": ["elif ${1:expression}:", "\t${2:pass}"],
    "description": "Code snippet for an elif"
  },
  "if/else": {
    "prefix": "if/else",
    "body": ["if ${1:condition}:", "\t${2:pass}", "else:", "\t${3:pass}"],
    "description": "Code snippet for an if statement with else"
  },
  "print": {
    "prefix": ["pr"],
    "body": ["print(${1:expression})"],
    "description": "print"
  },
  "for": {
    "prefix": "for",
    "body": ["for ${1:target_list} in ${2:expression_list}:", "\t${3:pass}"],
    "description": "Code snippet for a for loop"
  },
  "for/else": {
    "prefix": "for/else",
    "body": [
      "for ${1:target_list} in ${2:expression_list}:",
      "\t${3:pass}",
      "else:",
      "\t${4:pass}"
    ],
    "description": "Code snippet for a for loop with else"
  },
  "try/except": {
    "prefix": "try/except",
    "body": [
      "try:",
      "\t${1:pass}",
      "except ${2:expression} as ${3:identifier}:",
      "\t${4:pass}"
    ],
    "description": "Code snippet for a try/except statement"
  },
  "def": {
    "prefix": "def",
    "body": ["def ${1:funcname}(${2:parameter_list}):", "\t${3:pass}"],
    "description": "Code snippet for a function definition"
  },
  "def(abstract class method)": {
    "prefix": "def(abstract class method)",
    "body": [
      "def ${1:funcname}(self, ${2:parameter_list}):",
      "\traise NotImplementedError"
    ],
    "description": "Code snippet for an abstract class method"
  },
  "class": {
    "prefix": "class",
    "body": ["class ${1:classname}(${2:object}):", "\t${3:pass}"],
    "description": "Code snippet for a class definition"
  },
  "lambda": {
    "prefix": "lambda",
    "body": ["lambda ${1:parameter_list}: ${2:expression}"],
    "description": "Code snippet for a lambda statement"
  }
}
